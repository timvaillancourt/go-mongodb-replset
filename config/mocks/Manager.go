// Code generated by mockery v1.0.0. DO NOT EDIT.
package mocks

import config "github.com/timvaillancourt/go-mongodb-replset/config"
import mock "github.com/stretchr/testify/mock"

// Manager is an autogenerated mock type for the Manager type
type Manager struct {
	mock.Mock
}

// AddMember provides a mock function with given fields: member
func (_m *Manager) AddMember(member *config.Member) {
	_m.Called(member)
}

// Get provides a mock function with given fields:
func (_m *Manager) Get() *config.Config {
	ret := _m.Called()

	var r0 *config.Config
	if rf, ok := ret.Get(0).(func() *config.Config); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*config.Config)
		}
	}

	return r0
}

// GetMember provides a mock function with given fields: name
func (_m *Manager) GetMember(name string) *config.Member {
	ret := _m.Called(name)

	var r0 *config.Member
	if rf, ok := ret.Get(0).(func(string) *config.Member); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*config.Member)
		}
	}

	return r0
}

// IncrVersion provides a mock function with given fields:
func (_m *Manager) IncrVersion() {
	_m.Called()
}

// Initiate provides a mock function with given fields:
func (_m *Manager) Initiate() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// IsInitiated provides a mock function with given fields:
func (_m *Manager) IsInitiated() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Load provides a mock function with given fields:
func (_m *Manager) Load() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RemoveMember provides a mock function with given fields: member
func (_m *Manager) RemoveMember(member *config.Member) {
	_m.Called(member)
}

// Save provides a mock function with given fields:
func (_m *Manager) Save() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Set provides a mock function with given fields: _a0
func (_m *Manager) Set(_a0 *config.Config) {
	_m.Called(_a0)
}

// Validate provides a mock function with given fields:
func (_m *Manager) Validate() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
